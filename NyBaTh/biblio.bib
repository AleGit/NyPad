%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Alexander Maringele at 2013-04-28 15:40:06 +0200 


%% Saved with string encoding Unicode (UTF-8) 



@book{Tamassia:2007:HGD:1202383,
	Abstract = {This handbook provides a comprehensive survey of the field, from its combinatorial and geometric foundations to its applications in various areas of the physical, life, and social sciences. It offers in-depth coverage of combinatorial, geometric, and algorithmic foundations. With contributions from leading researchers in the field, the book presents numerous graph drawing algorithms as well as graph drawing systems. Applications to mathematics, computer science education, software engineering, database systems, artificial intelligence, telecommunications, bioinformatics, economics, and sociology are also included.},
	Author = {Tamassia, Roberto},
	Date-Added = {2013-04-28 13:39:02 +0000},
	Date-Modified = {2013-04-28 13:40:02 +0000},
	Isbn = {1584884126},
	Publisher = {Chapman \& Hall/CRC},
	Title = {Handbook of Graph Drawing and Visualization (Discrete Mathematics and Its Applications)},
	Year = {2007}}

@book{Diestel:2005fk,
	Author = {Diestel, Reinhard},
	Citeulike-Article-Id = {3561618},
	Citeulike-Linkout-0 = {http://vg00.met.vgwort.de/na/ddfc84df913d6ef96f8f?l=http://www.math.uni-hamburg.de/home/diestel/books/graph.theory/GraphTheoryIII.pdf},
	Date-Added = {2013-04-28 13:25:53 +0000},
	Date-Modified = {2013-04-28 13:27:18 +0000},
	Edition = {Third},
	Keywords = {graph-theory},
	Posted-At = {2008-11-17 20:06:51},
	Priority = {2},
	Publisher = {Springer-Verlag, Heidelberg},
	Series = {Graduate Texts in Mathematics},
	Title = {{Graph Theory}},
	Url = {http://vg00.met.vgwort.de/na/ddfc84df913d6ef96f8f?l=http://www.math.uni-hamburg.de/home/diestel/books/graph.theory/GraphTheoryIII.pdf},
	Volume = {173},
	Year = {2005},
	Bdsk-Url-1 = {http://vg00.met.vgwort.de/na/ddfc84df913d6ef96f8f?l=http://www.math.uni-hamburg.de/home/diestel/books/graph.theory/GraphTheoryIII.pdf}}

@book{Battista:1998:GDA:551884,
	Abstract = {Designed for use in a variety of courses including Information Visualization, Human-Computer Interaction, Graph Algorithms, Computational Geometry, and Graph Drawing. This book describes fundamental algorithmic techniques for constructing drawings of graphs. Suitable as either a textbook or reference manual, its chapters offer an accurate, accessible reflection of the rapidly expanding field of graph drawing. The authors are well-recognized researchers in the field of data structures and algorithms. In particular, their pioneering work on graph drawing has given momentum to this expanding field.},
	Address = {Upper Saddle River, NJ, USA},
	Author = {Battista, Giuseppe Di and Eades, Peter and Tamassia, Roberto and Tollis, Ioannis G.},
	Date-Added = {2013-04-28 13:05:58 +0000},
	Date-Modified = {2013-04-28 13:17:54 +0000},
	Edition = {1st},
	Isbn = {0133016153},
	Keywords = {graphs,drawing},
	Publisher = {Prentice Hall PTR},
	Title = {Graph Drawing: Algorithms for the Visualization of Graphs},
	Year = {1998}}

@book{Aho:2006:CPT:1177220,
	Abstract = {Compilers: Principles, Techniques and Tools, known to professors, students, and developers worldwide as the "Dragon Book," is available in a new edition. Every chapter has been completely revised to reflect developments in software engineering, programming languages, and computer architecture that have occurred since 1986, when the last edition published. The authors, recognizing that few readers will ever go on to construct a compiler, retain their focus on the broader set of problems faced in software design and software development.},
	Address = {Boston, MA, USA},
	Author = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
	Date-Added = {2013-04-28 13:03:28 +0000},
	Date-Modified = {2013-04-28 13:16:18 +0000},
	Isbn = {0321486811},
	Keywords = {compilers},
	Publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	Title = {Compilers: Principles, Techniques, and Tools (2nd Edition)},
	Year = {2006}}

@webpage{IEP:NYAYA,
	Date-Added = {2013-02-08 05:42:16 +0000},
	Date-Modified = {2013-02-08 05:47:37 +0000},
	Howpublished = {\url{http://www.iep.utm.edu/nyaya/}},
	Lastchecked = {2013-02-08},
	Month = {Feb},
	Rating = {0},
	Read = {0},
	Title = {\textit{Nyaya}},
	Url = {http://www.iep.utm.edu/nyaya/},
	Year = {2013},
	Bdsk-Url-1 = {http://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CodingGuidelines/}}

@webpage{WIKIPEDIA:NYAYA,
	Date-Added = {2013-02-08 05:39:01 +0000},
	Date-Modified = {2013-02-08 05:47:25 +0000},
	Howpublished = {\url{http://en.wikipedia.org/wiki/Nyaya}},
	Lastchecked = {2013-02-08},
	Month = {Feb},
	Rating = {0},
	Read = {0},
	Title = {\textit{Nyaya}},
	Url = {http://en.wikipedia.org/wiki/Nyaya},
	Year = {2013},
	Bdsk-Url-1 = {http://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CodingGuidelines/}}

@webpage{Git:Main,
	Date-Added = {2012-11-25 09:18:47 +0000},
	Date-Modified = {2012-11-25 09:35:58 +0000},
	Howpublished = {\url{http://git-scm.com}},
	Month = {Nov},
	Title = {\textit{Git}},
	Url = {http://git-scm.com},
	Year = {2012},
	Bdsk-Url-1 = {http://git-scm.com}}

@webpage{GitHub:Main,
	Date-Added = {2012-11-25 09:12:39 +0000},
	Date-Modified = {2012-11-25 09:33:58 +0000},
	Howpublished = {\url{http://www.github.com}},
	Month = {Nov},
	Title = {\textit{GitHub}},
	Url = {http://www.github.com},
	Year = {2012},
	Bdsk-Url-1 = {http://www.github.com}}

@webpage{ABR:2001:TLT,
	Author = {Abraham, David and Crawford, Liz and Lesta, Leanna and Merceron, Agathe and Yecef, Kalina},
	Date-Added = {2012-09-09 06:01:30 +0000},
	Date-Modified = {2012-11-25 09:44:00 +0000},
	Howpublished = {\url{http://imej.wfu.edu/articles/2001/2/03/index.asp}},
	Month = {Oct},
	Title = {\textit{The Logic Tutor}},
	Url = {http://imej.wfu.edu/articles/2001/2/03/index.asp},
	Year = {2001},
	Bdsk-Url-1 = {http://imej.wfu.edu/articles/2001/2/03/index.asp}}

@book{Louden:1997:CCP:523017,
	Abstract = {Compiler Construction: Principles and Practice features a comprehensive, hands-on case study project for constructing an actual, working compiler.},
	Address = {Boston, MA, USA},
	Author = {Louden, Kenneth C.},
	Date-Added = {2012-09-07 18:47:41 +0000},
	Date-Modified = {2013-04-28 13:16:06 +0000},
	Isbn = {0534939724},
	Keywords = {compilers},
	Publisher = {PWS Publishing Co.},
	Title = {Compiler Construction: Principles and Practice},
	Year = {1997}}

@book{Huth:2004:LCS:975331,
	Abstract = {Recent years have seen the development of powerful tools for verifying hardware and software systems, as companies worldwide realise the need for improved means of validating their products. There is increasing demand for training in basic methods in formal reasoning so that students can gain proficiency in logic-based verification methods. The second edition of this successful textbook addresses both those requirements, by continuing to provide a clear introduction to formal reasoning which is both relevant to the needs of modern computer science and rigorous enough for practical application. Improvements to the first edition have been made throughout, with extra and expanded sections on SAT solvers, existential/universal second-order logic, micro-models, programming by contract and total correctness. The coverage of model-checking has been substantially updated. Further exercises have been added. Internet support for the book includes worked solutions for all exercises for teachers, and model solutions to some exercises for students.},
	Address = {New York, NY, USA},
	Author = {Huth, Michael and Ryan, Mark},
	Date-Modified = {2013-04-28 13:23:52 +0000},
	Isbn = {052154310X},
	Keywords = {logic},
	Publisher = {Cambridge University Press},
	Title = {Logic in Computer Science: Modelling and Reasoning about Systems},
	Year = {2004}}

@book{Raskin:2000:HIN:333103,
	Abstract = {The honeymoon with digital technology is over: millions of users are tired of having to learn huge, arcane programs to perform the simplest tasks; fatigued by the pressure of constant upgrades, and have had enough of system crashes. In The Humane Interface, Jef Raskin -- the legendary, controversial creator of the original Apple Macintosh project -- shows that there is another path. Raskin explains why today's interface techniques lead straight to a dead end, and offers breakthrough ideas for building systems users will understand -- and love. Raskin reveals the fundamental design failures at the root of the problems so many users experience; shows how to understand user interfaces scientifically and quantitatively; and introduces fundamental principles that should underlie any next-generation user interface. He introduces practical techniques designers can use to improve their productivity of any product with an information-oriented human-machine interface, from personal computers to Internet appliances and beyond. The book presents breakthrough solutions for navigation, error management, and more, with detailed case studies from Raskin's own work. For all interface design programmers, product designers, software developers, IT managers, and corporate managers.},
	Address = {New York, NY, USA},
	Author = {Raskin, Jef},
	Date-Modified = {2013-04-28 13:14:32 +0000},
	Isbn = {0-201-37937-6},
	Publisher = {ACM Press/Addison-Wesley Publishing Co.},
	Source = {ACM member price \$22.45, order no. 706000},
	Title = {The humane interface: new directions for designing interactive systems},
	Year = {2000}}

@book{Barwise:2008,
	Abstract = {"Tarski's World" is an innovative and exciting method of introducing students to the language of first-order logic. Using the courseware package, students quickly master the meanings of connectives and qualifiers and soon become fluent in the symbolic language at the core of modern logic. The accompanying CD-ROM, compatible with both Macintosh and PC formats, includes a unique and effective corrective tool in the form of a game that methodically leads students back through any errors in sentences they have constructed, as well as a program for submitting homework to an automated grader. Intended as a supplement to a standard logic text, "Tarski's World" is an essential resource for helping students learn the language of logic.},
	Author = {Dave Barker-Plummer and Jon Barwise and John Etchemendy},
	Date-Modified = {2013-04-28 13:14:02 +0000},
	Publisher = {Center for the Study of Language and Information/SRI},
	Title = {Tarski's World -- Revised And Expanded},
	Year = {2008}}

@webpage{Apple:2012:IHIG,
	Author = {{Apple Inc.}},
	Date-Modified = {2012-09-07 19:24:01 +0000},
	Howpublished = {\url{http://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/}},
	Month = may,
	Title = {\textit{iOS Human Interface Guidelines}},
	Url = {http://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/},
	Year = {2012},
	Bdsk-Url-1 = {http://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/}}

@webpage{Middeldorp:2012:LICS,
	Author = {Aard Middeldorp},
	Date-Modified = {2012-09-07 21:48:17 +0000},
	Howpublished = {\url{http://cl-informatik.uibk.ac.at/teaching/ws11/lics/content.php}},
	Title = {Logic (lecture)},
	Url = {http://cl-informatik.uibk.ac.at/teaching/ws11/lics/content.php},
	Year = {2011/2012},
	Bdsk-Url-1 = {http://cl-informatik.uibk.ac.at/teaching/ws11/lics/content.php}}

@webpage{Apple:2012:IAPG,
	Author = {{Apple Inc.}},
	Date-Modified = {2012-09-07 19:23:45 +0000},
	Howpublished = {\url{http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/}},
	Month = may,
	Title = {\textit{iOS App Programming Guide}},
	Url = {http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/},
	Year = {2012},
	Bdsk-Url-1 = {http://developer.apple.com/library/ios/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/}}

@webpage{Apple:2012:IVPG,
	Author = {{Apple Inc.}},
	Date-Modified = {2012-09-07 19:24:53 +0000},
	Howpublished = {\url{http://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/}},
	Month = may,
	Title = {\textit{View Programming Guide for iOS}},
	Url = {http://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/},
	Year = {2012},
	Bdsk-Url-1 = {http://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/}}

@webpage{Apple:2012:CGC,
	Author = {{Apple Inc.}},
	Date-Modified = {2012-09-07 19:23:16 +0000},
	Howpublished = {\url{http://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/}},
	Month = may,
	Rating = {0},
	Read = {0},
	Title = {\textit{Coding Guidelines for Cocoa}},
	Url = {http://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CodingGuidelines/},
	Year = {2012},
	Bdsk-Url-1 = {http://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CodingGuidelines/}}

@book{GAMMAETAL,
	Abstract = {* Capturing a wealth of experience about the design of object-oriented software, four top-notch designers present a catalog of simple and succinct solutions to commonly occurring design problems. Previously undocumented, these 23 patterns allow designers to create more flexible, elegant, and ultimately reusable designs without having to rediscover the design solutions themselves. 
* The authors begin by describing what patterns are and how they can help you design object-oriented software. They then go on to systematically name, explain, evaluate, and catalog recurring designs in object-oriented systems. With Design Patterns as your guide, you will learn how these important patterns fit into the software development process, and how you can leverage them to solve your own design problems most efficiently.},
	Added-At = {2010-05-26T14:08:08.000+0200},
	Address = {Boston, MA, USA},
	Author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
	Biburl = {http://www.bibsonomy.org/bibtex/2b555af743ada2076f3e5ef02991ab78d/minas},
	Date-Modified = {2013-04-28 13:10:10 +0000},
	Description = {design patterns marie robot software},
	Interhash = {666db7e026c02bfa3e89b7b2772d18a2},
	Intrahash = {b555af743ada2076f3e5ef02991ab78d},
	Isbn = {0-201-63361-2},
	Keywords = {patterns},
	Publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	Timestamp = {2010-05-26T14:08:08.000+0200},
	Title = {Design patterns: elements of reusable object-oriented software},
	Year = 1995}

@book{Buck:2009:CDP:1803585,
	Abstract = {"Next time some kid shows up at my door asking for a code review, this is the book that I am going to throw at him." -Aaron Hillegass, founder of Big Nerd Ranch, Inc., and author of Cocoa Programming for Mac OS X Unlocking the Secrets of Cocoa and Its Object-Oriented Frameworks Mac and iPhone developers are often overwhelmed by the breadth and sophistication of the Cocoa frameworks. Although Cocoa is indeed huge, once you understand the object-oriented patterns it uses, you'll find it remarkably elegant, consistent, and simple. Cocoa Design Patterns begins with the mother of all patterns: the Model-View-Controller (MVC) pattern, which is central to all Mac and iPhone development. Encouraged, and in some cases enforced by Apple's tools, it's important to have a firm grasp of MVC right from the start. The book's midsection is a catalog of the essential design patterns you'll encounter in Cocoa, including * Fundamental patterns, such as enumerators, accessors, and two-stage creation * Patterns that empower, such as singleton, delegates, and the responder chain * Patterns that hide complexity, including bundles, class clusters, proxies and forwarding, and controllers And that's not all of them! Cocoa Design Patterns painstakingly isolates 28 design patterns, accompanied with real-world examples and sample code you can apply to your applications today. The book wraps up with coverage of Core Data models, AppKit views, and a chapter on Bindings and Controllers. Cocoa Design Patterns clearly defines the problems each pattern solves with a foundation in Objective-C and the Cocoa frameworks and can be used by any Mac or iPhone developer.},
	Author = {Buck, Erik M. and Yacktman, Donald A.},
	Date-Modified = {2013-04-28 13:08:43 +0000},
	Edition = {1st},
	Isbn = {0321535022, 9780321535023},
	Keywords = {patterns},
	Publisher = {Addison-Wesley Professional},
	Title = {Cocoa Design Patterns},
	Year = {2009}}

@book{Chacon:2009:PG:1618548,
	Abstract = {Git is the version control system developed by Linus Torvalds for Linux kernel development. It took the open source world by storm since its inception in 2005, and is used by small development shops and giants like Google, Red Hat, and IBM, and of course many open source projects. A book by Git experts to turn you into a Git expert Introduces the world of distributed version control Shows how to build a Git development workflow What you'll learn Use Git as a programmer or a project leader. Become a fluent Git user. Use distributed features of Git to the full. Acquire the ability to insert Git in the development workflow. Migrate programming projects from other SCMs to Git. Learn how to extend Git. Who is this book for? This book is for all open source developers: you are bound to encounter it somewhere in the course of your working life. Proprietary software developers will appreciate Git's enormous scalability, since it is used for the Linux project, which comprises thousands of developers and testers. About the Apress Pro Series The Apress Pro series books are practical, professional tutorials to keep you on and moving up the professional ladder. You have gotten the job, now you need to hone your skills in these tough competitive times. The Apress Pro series expands your skills and expertise in exactly the areas you need. Master the content of a Pro book, and you will always be able to get the job done in a professional development project. Written by experts in their field, Pro series books from Apress give you the hard-won solutions to problems you will face in your professional programming career.},
	Address = {Berkely, CA, USA},
	Author = {Chacon, Scott},
	Date-Modified = {2013-04-28 13:11:37 +0000},
	Edition = {1st},
	Isbn = {1430218339, 9781430218333},
	Publisher = {Apress},
	Title = {Pro Git},
	Year = {2009}}

@book{Kochan:2009:PO:1538451,
	Abstract = {Programming in Objective-C is a concise, carefully written tutorial on the basics of Objective-C and object-oriented programming for the iOS and Mac platforms. The book makes no assumptions about prior experience with object-oriented programming languages or with the C language (which Objective-C is based upon). Because of this, both beginners and experienced programmers alike can use this book to quickly and effectively learn the fundamentals of Objective-C. Readers can also learn the concepts of object-oriented programming without having to first learn all of the intricacies of the underlying procedural language (C). This unique approach to learning, combined with many small program examples and exercises at the end of each chapter, makes Programming in Objective-C ideally suited for either classroom use or self-study. While the Objective-C language itself has gone through relatively minor changes since the introduction of Objective-C 2.0, the Apple development tools that programmers use for Objective-C development on the Mac and on iOS have changed significantly in a very short period of time. },
	Author = {Kochan, Stephen},
	Date-Modified = {2013-04-28 13:12:52 +0000},
	Edition = {2nd},
	Isbn = {0321566157, 9780321566157},
	Publisher = {Addison-Wesley Professional},
	Title = {Programming in Objective-C 2.0},
	Year = {2009}}

@article{Dunlosky01012013,
	Abstract = {Many students are being left behind by an educational system that some people believe is in crisis. Improving educational outcomes will require efforts on many fronts, but a central premise of this monograph is that one part of a solution involves helping students to better regulate their learning through the use of effective learning techniques. Fortunately, cognitive and educational psychologists have been developing and evaluating easy-to-use learning techniques that could help students achieve their learning goals. In this monograph, we discuss 10 learning techniques in detail and offer recommendations about their relative utility. We selected techniques that were expected to be relatively easy to use and hence could be adopted by many students. Also, some techniques (e.g., highlighting and rereading) were selected because students report relying heavily on them, which makes it especially important to examine how well they work. The techniques include elaborative interrogation, self-explanation, summarization, highlighting (or underlining), the keyword mnemonic, imagery use for text learning, rereading, practice testing, distributed practice, and interleaved practice.To offer recommendations about the relative utility of these techniques, we evaluated whether their benefits generalize across four categories of variables: learning conditions, student characteristics, materials, and criterion tasks. Learning conditions include aspects of the learning environment in which the technique is implemented, such as whether a student studies alone or with a group. Student characteristics include variables such as age, ability, and level of prior knowledge. Materials vary from simple concepts to mathematical problems to complicated science texts. Criterion tasks include different outcome measures that are relevant to student achievement, such as those tapping memory, problem solving, and comprehension.We attempted to provide thorough reviews for each technique, so this monograph is rather lengthy. However, we also wrote the monograph in a modular fashion, so it is easy to use. In particular, each review is divided into the following sections:
General description of the technique and why it should workHow general are the effects of this technique?
 2a. Learning conditions 2b. Student characteristics 2c. Materials 2d. Criterion tasks
                     Effects in representative educational contextsIssues for implementationOverall assessment
            The review for each technique can be read independently of the others, and particular variables of interest can be easily compared across techniques.To foreshadow our final recommendations, the techniques vary widely with respect to their generalizability and promise for improving student learning. Practice testing and distributed practice received high utility assessments because they benefit learners of different ages and abilities and have been shown to boost students' performance across many criterion tasks and even in educational contexts. Elaborative interrogation, self-explanation, and interleaved practice received moderate utility assessments. The benefits of these techniques do generalize across some variables, yet despite their promise, they fell short of a high utility assessment because the evidence for their efficacy is limited. For instance, elaborative interrogation and self-explanation have not been adequately evaluated in educational contexts, and the benefits of interleaving have just begun to be systematically explored, so the ultimate effectiveness of these techniques is currently unknown. Nevertheless, the techniques that received moderate-utility ratings show enough promise for us to recommend their use in appropriate situations, which we describe in detail within the review of each technique.Five techniques received a low utility assessment: summarization, highlighting, the keyword mnemonic, imagery use for text learning, and rereading. These techniques were rated as low utility for numerous reasons. Summarization and imagery use for text learning have been shown to help some students on some criterion tasks, yet the conditions under which these techniques produce benefits are limited, and much research is still needed to fully explore their overall effectiveness. The keyword mnemonic is difficult to implement in some contexts, and it appears to benefit students for a limited number of materials and for short retention intervals. Most students report rereading and highlighting, yet these techniques do not consistently boost students' performance, so other techniques should be used in their place (e.g., practice testing instead of rereading).Our hope is that this monograph will foster improvements in student learning, not only by showcasing which learning techniques are likely to have the most generalizable effects but also by encouraging researchers to continue investigating the most promising techniques. Accordingly, in our closing remarks, we discuss some issues for how these techniques could be implemented by teachers and students, and we highlight directions for future research.},
	Author = {Dunlosky, John and Rawson, Katherine A. and Marsh, Elizabeth J. and Nathan, Mitchell J. and Willingham, Daniel T.},
	Date-Modified = {2013-01-17 17:03:32 +0000},
	Doi = {10.1177/1529100612453266},
	Eprint = {http://psi.sagepub.com/content/14/1/4.full.pdf+html},
	Journal = {Psychological Science in the Public Interest},
	Number = {1},
	Pages = {4-58},
	Title = {Improving Students' Learning With Effective Learning Techniques: Promising Directions From Cognitive and Educational Psychology},
	Url = {http://psi.sagepub.com/content/14/1/4.abstract},
	Volume = {14},
	Year = {2013},
	Bdsk-Url-1 = {http://psi.sagepub.com/content/14/1/4.abstract},
	Bdsk-Url-2 = {http://dx.doi.org/10.1177/1529100612453266}}
