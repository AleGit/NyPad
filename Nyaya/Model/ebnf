====================================================================
Parser v2

NOT > AND > OR > BIC > IMP > XOR

formula     = implication { XOR formula }
implication = bicondition [ IMP implication ]
bicondition = disjunction [ BIC bicondition ]
disjunction = conjunction { OR conjunction }
conjunction = negation    { AND negation }
negation    = NOT negation | term | LPAR formula RPAR
term        = identifier [ LPAR RPAR | LPAR tuple RPAR ]
tuple       = formula { COMMA formula }
identifier  = Alphanumeric { Alphanumeric }

NOT         = "!"  | "¬" | "~" | "NOT" | "not"
AND         = "&'  | "∧" | "." | "AND" | "and"
OR          = "|"  | "∨" | "+" | "OR"  | "or"
BIC         = "<>" | "↔"
IMP         = ">"  | "→"
XOR         = "^"  | "⊻" | "⊕" | "XOR" | "xor"
LPAR        = "("
RPAR        = ")"
COMMA       = ","

====================================================================

!!x   = !(!x)
!x.y  = (!x).y
!x+y  = (!x)+y
!x<>y = (!x)<>y
!x>y  = (!x)>y
!x^y  = (!x)^x

x.!y   = x.(!y)
x.y.z  = (x.y).z
x.y+z  = (x.y)+z
x.y<>z = (x.y)<>z
x.y>z  = (x.y)>z
x.y^z  = (x.y)^z



#####################################################################

EBNF-Grammatik für Arithmetische Ausdrücke
==========================================

Ausdruck = Summe
Summe = Produkt { ("+"|"-") Produkt }
Produkt = Faktor { ("*"|"/"|"%") Faktor }
Faktor = ["+"|"-"] ( Zahl | "(" Summe ")" )
Zahl = Ziffer | ZifferOhneNull Zahl
ZifferOhneNull = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
Ziffer = "0" | ZifferOhneNull

EBNF-Grammatik für Aussagenlogische Ausdrücke
=============================================

sequence    = formula   { ";" formula }
formula     = junction  [ ( "→" | "↔" ) formula ]
junction    = negation  { ( "∨" | "∧" ) negation } 
negation    = "¬" negation | term | "(" formula ")"
term        = identifier [ "(" ")" | "(" tuple ")" ]
tuple       = formula { "," formula }
identifier  = Alphanumeric { Alphanumeric }



Transformations:

P     <=> !!P


P&Q   <=> !!(P&Q) <=> !(!P | !Q)
           !(P&Q)  =>   !P | !Q
           
P|Q   <=> !!(P|Q) <=> !(!P & !Q)
           !(P|Q)  =>   !P & !Q
           
P>Q   <=> !P | Q
!P>Q  <=> P | Q

P<>Q  <=> (P>Q) & (Q>P) <=> (!P | Q) & (!Q | P)

Distribution:

P & (Q | R) <=> (P & Q) | (P & R)
P | (Q & R) <=> (P | Q) & (P | R)

Symmetrie

P & Q <=> Q & P
P | Q <=> Q | P
P ^ Q <=> Q ^ P
 P<>Q <=> Q<>P

Assoziativität:

P & (Q & R) <=> (P & Q) & R
P | (Q | R) <=> (P | Q) | R

==============================
transformation nodes
imf                         transform to
---                         ------------
P <> Q                      (!P | Q) & (!Q | P)
P > Q                       !P | Q
P ^ Q                       !(P <> Q)

nnf
---
!!P                         P
!(P | Q)                    !P & !Q
!(P & Q)                    !P | !Q

cnf
---
P | (R & S)                 (P | R) & (P | S)
(P & Q) | R                 (P | R) & (Q | R)
(P & Q) | (R & S)           ((P&Q)|R) & ((P&Q)|S)   (P|R) & (Q|R) & (P|S) & (Q|S)
(P & Q) | (R & S)           (P|(R&S)) & (Q|(R&S))   (P|R) & (P|S) & (Q|R) & (Q|S)

dnf
---
P & (R | S)                 (P & R) | (P & S)
(P | Q) & R                 (P & R) | (Q & R)
(P | Q) & (R | S)           ((P|Q)&R) | ((P|Q)&S)   (P&R) | (Q&R) | (P&S) | (Q|S)
(P | Q) & (R | S)           (P|(R&S)) | (Q&(R|S))   (P|R) & (P&S) | (Q&R) | (Q|S)



